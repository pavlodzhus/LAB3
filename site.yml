---
- name: Ansible lab
  # TODO: change to remote if you have one
  hosts: local
  gather_facts: true

  tasks:
    - name: Install some basic packages defined in variable "packages"
      become: true
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ packages }}"

    - name: Enable Nginx service, ensure it is not masked and start it
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Create {{ app_dir }} directory if it does not exist
      become: true
      ansible.builtin.file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_id }}"

    - name: Download Java app to {{ app_dir }}/{{ app_file }}
      ansible.builtin.get_url:
        url: "https://storage.googleapis.com/devops-practice-files/systemd/ServicesLab-0.0.1.jar"
        dest: "{{ app_dir }}/{{ app_file }}"
        mode: '0644'
        owner: "{{ ansible_user_id }}"

    - name: Create a Java App Unit
      become: true
      ansible.builtin.template:
        src: app.service.j2
        dest: "/etc/systemd/system/{{ app_file }}.service"
        mode: '0644'
        owner: 'root'
        group: 'root'
      notify:
        - Reload Systemd

    - name: Enable {{ app_file }} service, ensure it is not masked and start it
      become: true
      ansible.builtin.systemd:
        name: "{{ app_file }}"
        state: started
        enabled: yes

    - name: Create a Nginx config
      become: true
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: "/etc/nginx/nginx.conf"
        mode: '0644'
        owner: 'root'
        group: 'root'

    - name: Restart Nginx
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: restarted

  handlers:
    - name: Reload Systemd
      become: true
      ansible.builtin.systemd:
        name: "{{ app_file }}"
        state: reloaded
